= content_for :header_article
  header.intro-header
   .container
    .row
      .col-lg-8.col-lg-offset-2.col-md-10.col-md-offset-1
        .post-heading
          h1 == @article.title
          span.meta
            | Posted by #{link_to @article.user.username, user_path(@article.user.id)} on
            |  #{@article.created_at.to_formatted_s(:long_ordinal)}

/ notice
== alert_tag notice, "success"

/ article description
== sanitize @article.description
hr
- if @article.tags.any?
	span.small Tagged with: 
	== raw @article.tags.map { |tag| link_to "#{tag.name}", tagged_url(:tag => tag.name), :class => "small" }.join(', ') 

hr		
.pull-left.small
	| Share: #{social_share_button_tag(@article.title, 'data-popup' => true)}
.clearfix
- if user_signed_in?
	p.small
		= link_to 'Edit', edit_article_path(@article)
		'  |
		= link_to 'Back', dashboard_path

hr
/! author
.media
	.media-left.pull-left
		- if @article.user.avatar_url.split('/')[5].eql?("default_profile_pic.jpg")
			== image_tag("default_profile_pic.jpg", size: "64", class: "img-rounded")	
		- else
			== image_tag(@article.user.avatar_url, size: "64", class: "img-rounded")			
	.media-body
		h4.media-heading == "#{@article.user.firstname} #{@article.user.lastname}"
		.small == @article.user.biographical_info
hr
.pull-right.small
	== link_to "Report Abuse", {:controller => "abuse_reports", :action => "new", :article_id => @article.id}, 'data-popup' => true, :class => "small"

.clearfix

h3 Comments
/! form comment
= form_for [@article, @article.comments.build] do |f|
	- if not user_signed_in?
		.form-group = f.text_field :name, placeholder: "Name", :class => "form-control"
		.form-group = f.email_field :email, placeholder: "Email", :class => "form-control"
	.form-group = f.text_area :comment, size: "5x6",placeholder: "Comments..", :class => "form-control"
	
	= f.submit "Post Comment", :class => "btn btn-default" 

/! list of comments
br
- @comments.each do |comment|
	.small.well
		span: strong #{comment.name}
		span.small.pull-right.text-muted: em #{time_ago_in_words comment.created_at} ago
		p == comment.comment

		- if user_signed_in?
			== link_to 'Delete comment',[@article, comment], method: :delete, data: { confirm: 'Are you sure?' }, :class => "small"

